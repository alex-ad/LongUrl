@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<Locale> Locale
@model LongUrl.Models.AccessToken

@{
    ViewData["Title"] = Locale["title_api"];
    ViewData["Page"] = "Api";
}
<h4>LongURL API</h4>
<br />
<p><strong>LongURL API</strong> – интерфейс для разработчиков, позволяющий раскрывать короткие ссылки с помощью HTTP GET-запроса к сайту longurl.info.</p>
<h5>
    <u>HTTP GET-запрос, пример с пояснениями</u>
</h5>
<h6>Заголовок (Header)</h6>
<code>GET https://longurl.info/api/2.0/?token=API_TOKEN&url=REQUEST_URL&antivirus=REQUEST_ANTIVIRUS</code>
<br />
<br />
<h6>Параметры HTTP GET-запроса</h6>
<ul>
    <li><strong class="color-param">REQUEST_URL</strong> – короткая ссылка для расшифровки в виде строки</li>
    <li><strong class="color-param">REQUEST_ANTIVIRUS</strong> – если указано <strong class="color-param">true</strong>, будет произведена антивирусная проверка конечного ресурса (после расшифровки короткой ссылки); если указано <strong class="color-param">false</strong>, или параметр <strong class="color-param">REQUEST_ANTIVIRUS</strong> пропущен, антивирусная проверка производиться не будет</li>
    <li><strong class="color-param">API_TOKEN</strong> – токен (ключ) авторизации пользователя, привязываемый к электронной почте (См.ниже)</li>
</ul>
<p>
    <strong>Например</strong>,<br />
    <code>GET https://longurl.info/api/2.0/?token=111&url=https://bit.ly/2QnxnNZ&antivirus=true</code><br />
    <code>GET https://longurl.info/api/2.0/?token=111&url=https://bit.ly/2QnxnNZ&antivirus=false</code><br />
    <code>GET https://longurl.info/api/2.0/?token=111&url=https://bit.ly/2QnxnNZ</code><br />
</p>
<h5>
    <u>HTTP GET-ответ, пример с пояснениями</u>
</h5>
<h6>Заголовок (Header)</h6>
<code>HTTP/1.1 200 OK<br />Content-Type: application/json</code>
<br />
<br />
<h6>Тело HTTP GET-ответа</h6>
<p>Тело ответа рассмотрим на основе вышеперечисленных примерах HTTP GET-запросов</p>
<code>
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;"success": true,<br />
    &nbsp;&nbsp;&nbsp;&nbsp;"url": ["http://example.com"],<br />
    &nbsp;&nbsp;&nbsp;&nbsp;"antivirusStatus": 0,<br />
    &nbsp;&nbsp;&nbsp;&nbsp;"antivirusMessage": "HTML_BODY",<br />
    &nbsp;&nbsp;&nbsp;&nbsp;"safeBrowsing": true<br />
    }
</code>
<p>Как видно, ответ передается в виде JSON-строки.</p>
<h6>Поля и значения полей HTTP GET-ответа</h6>
<p>
    <strong class="color-param">success</strong> – признак успешности расшифровки короткой ссылки, где
    <ul>
        <li><strong class="color-param">true</strong> – успешно</li>
        <li><strong class="color-param">false</strong> – произошла какая-то ошибка, возможно, неверный формат запроса</li>
    </ul>
</p>
<p><strong class="color-param">url</strong> – массыв с расшифрованными короткими ссылками, если определена цепочка перенаправлений, массив будет содержать несколько элементов</p>
<p>
    <strong class="color-param">antivirusStatus</strong> (*) – результат антивирусной проверки, где
    <ul>
        <li><strong class="color-param">0</strong> – вирусов не обнаружено</li>
        <li><strong class="color-param">1</strong> – обнаружены вирусы</li>
        <li><strong class="color-param">2</strong> – произошла ошибка в процессе антивирусной проверки, например, целевой ресурс недоступен</li>
    </ul>
</p>
<p><strong>Примечание</strong>. Если антивирусная проверка не выполнялась, т.е. параметр <strong class="color-param">antivirus</strong> в HTTP GET-запросе равнялся <strong class="color-param">false</strong>, значение поля <strong class="color-param">antivirusStatus</strong> всегда будет <strong class="color-param">2</strong></p>
<p><strong class="color-param">antivirusMessage</strong> – подробности (лог) проверки ресурса</p>
<p><strong>Внимание</strong>. Тело значения поля <strong class="color-param">antivirusMessage</strong> представлено полноценной HTML-строкой, необходимо учитывать данный факт при необходимости вывода ответа на стороне клиента.</p>
<p>
    <strong class="color-param">safeBrowsing</strong> (**) – результат проверки ресурса по базе данных потенциально вредоносных сайтов Google, где
    <ul>
        <li><strong class="color-param">true</strong> – ресурс безопасен</li>
        <li><strong class="color-param">false</strong> – ресурс может представлять угрозу</li>
    </ul>
</p>
<p><strong>Примечание</strong>. Если антивирусная проверка не выполнялась, т.е. параметр <strong class="color-param">antivirus</strong> в HTTP GET-запросе равнялся <strong class="color-param">false</strong>, значение поля <strong class="color-param">safeBrowsing</strong> всегда будет <strong class="color-param">false</strong></p>
<p><strong>Примечание</strong>. Если определена цепочка перенаправлений, антивирусную проверку будет проходить только последний ресурс в данной цепочке (т.е. последний элемент в массиве <strong class="color-param">url</strong>)</p>
<hr />
<p>
    (*) – сканирование ресурса на вирусы происходит с помощью
    <strong>
        <a href="http://www.drweb.com/" target="_blank">Dr.Web</a>
    </strong>
</p>
<p>
    (**) – проверка потенциально небезопасных ресурсов происходит с помощью технологии
    <strong>
        <a href="https://transparencyreport.google.com/safe-browsing/overview" target="_blank">Google Safe Browsing</a>
    </strong>
</p>
<hr />
<p>
    <vc:request-token request="@Model"></vc:request-token>
</p>